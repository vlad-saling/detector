/* the grid */

@mixin clearfix {
  &:after {
    content: " ";
    display:block;
    clear:both;
  }
}


/* general container */

.container {
  margin: 0 auto;
  /*padding: 0 1%;*/
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  clear:both;
  
  @include clearfix;

  @media only screen and (max-width: $max-fixed-width) {
    min-width: 320px;
    width: auto;
  }

  @media only screen and (max-width: $min-fixed-width) {
    min-width: 240px;
    width: auto;
  }

  &.full { 
    width: 100%;
  }

  &.fixed { 
    max-width: $max-fixed-width;
  }

  .container {
    @media only screen and (max-width: $max-fixed-width) {
      min-width: 0px;
    }

    @media only screen and (max-width: $min-fixed-width) {
      min-width: 0px;
    }
  }
}



/* grid container defining mobile wrappers, that should have a gap and not cover whole screen - usually one parent wrapper */
.container.mprime {
  @media only screen and (max-width: $max-fixed-width) {
    padding-left: 5%;
    padding-right: 5%;
  }
}


/* column container */

.cc {
  width: 100%;
  clear:both;
  
  &::after {
    content: " ";
    display:block;
    clear:both;
  }
}


/* columns */

/* textual gutter (layout) */

.tg-small, .tg-small .cc  {
  > [class*="c-"] {padding: 0 1% 1% 0;}
}

.tg-medium, .tg-medium .cc  {
  > [class*="c-"] {padding: 0 2% 2% 0;} 
}

.tg-large, .tg-large .cc  {
   > [class*="c-"] {padding: 0 5% 5% 0;} 
}

@media only screen and (max-width: $min-fixed-width) {
    .tg-small > [class*="c-"] {
      padding: 0 1% 1% 1%; 
    }

    .tg-medium > [class*="c-"] {
      padding: 0 2% 2% 2%; 
    }

    .tg-large > [class*="c-"] {
      padding: 0 5% 5% 5%; 
    }
}


/* base grid */

.c-one {width: 8.33333%}
.c-two {width: 16.66667%} 
.c-three {width: 25%}
.c-four {width: 33.33333%}
.c-five {width: 41.66667%}
.c-six {width: 50%}
.c-seven {width: 58.33333%}
.c-eight {width: 66.66667%}
.c-nine {width: 75%}
.c-ten {width: 83.33333%} 
.c-eleven {width: 91.66667%}
.c-twelve {width: 100%}


/* fraction grid */

.c-half {width:50%}
.c-third {width:33.3333%}
.c-fourth {width:25%}
.c-fifth {width:20%}
.c-sixth {width: 16.66667%}
.c-seventh {width:14.28%}
.c-eighth {width:12.5%}
.c-ninth {width:11.11111%}

/* column nesting limit -> 4 levels allowed - may be removed or tweaked if needed */
[class*="c-"] > [class*="c-"] > [class*="c-"] > [class*="c-"] > [class*="c-"] {
    width: 100%;
}

/* structural grid (layout) */

[class*="c-"] {
  float:left;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  min-height: 1px;
  padding: 0 10px;

  @media only screen and (max-width: $min-fixed-width) {
    /* all columns go 100% frenzy on small screen */
    width: 100%;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
  }

}

[class*="c-"] + [class*="c-"]:last-child {
  float:right;
}




